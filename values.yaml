hostnames:
  - www.autowp.ru
  - be.wheelsage.org
  - br.wheelsage.org
  - en.wheelsage.org
  - es.wheelsage.org
  - fr.wheelsage.org
  - uk.wheelsage.org
  - zh.wheelsage.org
auth:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1
  secret: 1234567890abcdef1234567890abcdef
  postgres:
    username: auth
    password: password
redirects:
  - from:
      - autowp.ru
    to: www.autowp.ru
  - from:
      - www.wheelsage.org
      - wheelsage.org
    to: en.wheelsage.org
emailSalt: salt
usersSalt: salt
google:
  clientId: "1234567890.apps.googleusercontent.com"
  clientSecret: "secret"
facebook:
  clientId: "1234567890"
  clientSecret: "secret"
  pageAccessToken: "access_token"
vk:
  clientId: "1234567890"
  clientSecret: "secret"
  token: "token"
  ownerId: "-1234567890"
smtp:
  hostname: "example.com"
  port: 465
  username: "no-reply@autowp.ru"
  password: "password"
telegram:
  webhookToken: "token"
  accessToken: "1234567890:token"
twitter:
  username: "autowp_ru"
  key: "key"
  secret: "secret"
  oauthToken: "1234567890-token"
  oauthSecret: "secret"
yandexMoney:
  secret: "secret"
  price: "999"
reCaptcha:
  publicKey: "publicKey"
  privateKey: "privateKey"
backend:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1
s3:
  key: "key"
  secret: "secret"
  endpoints:
    - name: n1
      hostname: n1.example.com
      address: 192.168.0.1
      visible: true
    - name: n2
      hostname: n1.example.com
      address: 192.168.0.2
      visible: true
    - name: n3
      hostname: n1.example.com
      address: 192.168.0.3
      visible: false
goautowp:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1
  postgres:
    password: password
traffic:
  postgres:
    username: traffic
    password: password
memcached:
  enabled: true
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
    resources:
      limits:
        cpu: 1000m
        memory: 5Gi
      requests:
        cpu: 10m
        memory: 10Mi
    containerSecurityContext:
      readOnlyRootFilesystem: true
  resources:
    limits:
      cpu: 1000m
      memory: 5Gi
    requests:
      cpu: 100m
      memory: 100Mi
  containerSecurityContext:
    readOnlyRootFilesystem: true
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 101
rabbitmq:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: autowp-rabbitmq
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
  resources:
    limits:
      cpu: 1000m
      memory: 5Gi
    requests:
      cpu: 100m
      memory: 100Mi
  commonAnnotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "The variable RABBITMQ_COMBINED_CERT_PATH must be set to either an existant file or a non-existant file in a writable directory."
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 101
postgres:
  hostname: 127.0.0.1
  port: 5432
feedback:
  to: autowp@gmail.com
keycloak:
  clientSecret: secret
mysql:
  host: host
  database: database
  username: username
  password: password
imageCredentials:
  registry: quay.io
  username: someone
  password: sillyness
  email: someone@host.com
