hostnames:
  - www.autowp.ru
  - be.wheelsage.org
  - br.wheelsage.org
  - en.wheelsage.org
  - es.wheelsage.org
  - fr.wheelsage.org
  - uk.wheelsage.org
  - zh.wheelsage.org
auth:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1
  secret: 1234567890abcdef1234567890abcdef
  postgres:
    username: auth
    password: password

redirects:
  - from:
    - autowp.ru
    to: www.autowp.ru
  - from:
    - www.wheelsage.org
    - wheelsage.org
    to: en.wheelsage.org

emailSalt: salt
usersSalt: salt

google:
  clientId: "1234567890.apps.googleusercontent.com"
  clientSecret: "secret"

facebook:
  clientId: "1234567890"
  clientSecret: "secret"
  pageAccessToken: "access_token"

vk:
  clientId: "1234567890"
  clientSecret: "secret"
  token: "token"
  ownerId: "-1234567890"

smtp:
  hostname: "example.com"
  port: 465
  username: "no-reply@autowp.ru"
  password: "password"

telegram:
  webhookToken: "token"
  accessToken: "1234567890:token"

twitter:
  username: "autowp_ru"
  key: "key"
  secret: "secret"
  oauthToken: "1234567890-token"
  oauthSecret: "secret"

yandexMoney:
  secret: "secret"
  price: "999"

reCaptcha:
  publicKey: "publicKey"
  privateKey: "privateKey"

backend:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1

s3:
  key: "key"
  secret: "secret"
  endpoints:
    - name: n1
      hostname: n1.example.com
      address: 192.168.0.1
      visible: true
    - name: n2
      hostname: n1.example.com
      address: 192.168.0.2
      visible: true
    - name: n3
      hostname: n1.example.com
      address: 192.168.0.3
      visible: false

goautowp:
  sentry:
    dsn: https://1234567890abcdef1234567890abcdef@sentry.example.com/1
  postgres:
    password: password

traffic:
  postgres:
    username: traffic
    password: password

backup:
  s3Hostname: "s3.example.com"
  s3AccessKey: "key"
  s3Secret: "secret"
  s3Bucket: "bucket"

memcached:
  enabled: true
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack

rabbitmq:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: autowp-rabbitmq
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack

postgres:
  hostname: 127.0.0.1
  port: 5432

feedback:
  to: autowp@gmail.com

keycloak:
  clientSecret: secret

mysql:
  enabled: true
  architecture: standalone
  auth:
    database: autowp
    username: username
    password: password
    rootPassword: password
  primary:
    configuration: |-
      [mysqld]
      default_authentication_plugin=caching_sha2_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      default-time-zone='UTC'
      tmp_table_size=2G
      max_heap_table_size=2G
      max_connections = 2000
      innodb_buffer_pool_size=20G
      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    persistence:
      enabled: true
      existingClaim: mysql
      size: 100Gi
  secondary:
    replicaCount: 0

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
