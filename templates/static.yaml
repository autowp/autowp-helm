apiVersion: apps/v1
kind: Deployment
metadata:
  name: static
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "nginx required temporary files for buffering"
spec:
  selector:
    matchLabels:
      app: static
  replicas: 1
  template:
    metadata:
      labels:
        app: static
    spec:
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: img
          persistentVolumeClaim:
            claimName: img
      containers:
        - name: static
          image: nginxinc/nginx-unprivileged:1-alpine
          imagePullPolicy: Always
          ports:
            - name: app-port
              containerPort: 8080
          env:
            - name: NGINX_ENTRYPOINT_QUIET_LOGS
              value: "1"
          livenessProbe:
            httpGet:
              path: /
              port: app-port
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: app-port
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: "/usr/share/nginx/html/img"
              name: img
              readOnly: true
          resources:
            limits:
              memory: 5Gi
              cpu: 4000m
            requests:
              memory: 10M
              cpu: 50m
      securityContext:
        runAsNonRoot: true
        fsGroup: 101
        runAsUser: 101
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - static
              weight: 100

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: static
  name: static
spec:
  ports:
    - name: app-port
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: static
  sessionAffinity: None
  type: ClusterIP
